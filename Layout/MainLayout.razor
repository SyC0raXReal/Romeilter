@inherits LayoutComponentBase

<MudThemeProvider IsDarkMode />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout style="height: 100%;">
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start"
            OnClick="@ToggleDrawer" />
        <MudSpacer />
        <div class="d-flex flex-row gap-3">
            @if (IsAdmin)
            {
                <MudIconButton Variant="Variant.Outlined" Color="@(ShowAdminContent ? Color.Secondary : Color.Success)"
                    Icon="@(ShowAdminContent ? Icons.Material.Filled.RemoveRedEye : @Icons.Material.Outlined.RemoveRedEye)"
                    OnClick="@((e) => ToggleAdmin())" />
            }
            <MudIconButton Variant="Variant.Outlined" Color="Color.Secondary" Icon="@Icons.Material.Filled.Lock"
                OnClick="@((e) => ToggleLogin())" />
        </div>
    </MudAppBar>
    <MudDrawer @bind-Open="@_open" Variant="@DrawerVariant.Temporary" Overlay="false" OverlayAutoClose="true">
        <MudNavMenu>
            <div class="d-flex flex-row justify-content-between">
                <div class="d-flex flex-column">
                    <MudText Typo="Typo.h6" Class="px-4">Romeilter</MudText>
                    <MudText Typo="Typo.body2" Class="px-4 mud-text-secondary">PnP Wiki</MudText>
                </div>
                <div>
                    <MudIconButton Icon="@Icons.Material.Filled.KeyboardDoubleArrowLeft" Color="Color.Inherit"
                        OnClick="@((e) => ToggleDrawer())" />
                </div>
            </div>
            <MudDivider Class="my-2" />
            <MudNavLink Icon="@Icons.Material.Filled.Home" Href="">Home</MudNavLink>
            <MudNavGroup Icon="@Icons.Material.Filled.People" Title="Völker" Expanded="true">
                <MudNavLink Icon="@Icons.Material.Filled.LocalFireDepartment" Href="people/cherstan">Cherstan
                </MudNavLink>
                <MudNavLink Icon="@Icons.Material.Filled.People" Href="people/federation">Federation von Khergia
                </MudNavLink>
                <MudNavLink Icon="@Icons.Material.Filled.Nature" Href="people/iqua">Iqua</MudNavLink>
                <MudNavLink Icon="@Icons.Material.Filled.Build" Href="people/cerg">Protektorat Cerg</MudNavLink>
                <MudNavLink Icon="@Icons.Custom.Uncategorized.ChessKing" Href="people/ahian">Sultanat Ahian
                </MudNavLink>
            </MudNavGroup>
            <MudNavGroup Icon="@Icons.Material.Filled.Brightness1" Title="Welt" Expanded="true">
                <MudNavLink Icon="@Icons.Material.Filled.MenuBook" Href="world/lore">Lore</MudNavLink>
                <MudNavLink Icon="@Icons.Material.Filled.Star" Href="world/magic">Magie</MudNavLink>
                <MudNavLink Icon="@Icons.Material.Filled.WineBar" Href="world/pantheon">Götterpantheon</MudNavLink>
                <MudNavLink Icon="@Icons.Material.Filled.LocalDrink" Href="world/alchemy">Alchemie</MudNavLink>
                <MudNavGroup Icon="@Icons.Custom.Uncategorized.ColorPalette" Title="Rassen" Expanded="true">
                    <MudNavLink Icon="@Icons.Custom.Uncategorized.ChessKing" Href="world/races/human">Menschen
                    </MudNavLink>
                    <MudNavLink Icon="@Icons.Custom.Uncategorized.ChessQueen" Href="world/races/dwarf">Zwerge
                    </MudNavLink>
                    <MudNavLink Icon="@Icons.Custom.Uncategorized.ChessKnight" Href="world/races/elves">Elfen
                    </MudNavLink>
                    <MudNavLink Icon="@Icons.Custom.Uncategorized.ChessPawn" Href="world/races/gnomes">Gnome
                    </MudNavLink>
                    <MudNavLink Icon="@Icons.Custom.Uncategorized.ChessBishop" Href="world/races/harenae">Harenae
                    </MudNavLink>
                    <MudNavLink Icon="@Icons.Custom.Uncategorized.ChessRook" Href="world/races/giant">Riesen
                    </MudNavLink>
                </MudNavGroup>
            </MudNavGroup>
            @if (ShowAdminContent)
            {
                <MudNavGroup Icon="@Icons.Material.Filled.Build" Title="Tools" Expanded="true">
                    <MudNavLink Icon="@Icons.Material.Filled.PersonOutline" Href="tools/npcs">NPCs
                    </MudNavLink>
                </MudNavGroup>
            }
        </MudNavMenu>
    </MudDrawer>>

    <MudPopover Open="@Login" Fixed="true" Class="px-4 pt-4" AnchorOrigin="Origin.CenterCenter">
        <div class="d-flex flex-column">
            <MudTextField @bind-Value="Password" InputType="InputType.Password" Label="Passwort eingeben"
                Variant="Variant.Text"></MudTextField>
            <div class="d-flex flex-row gap-3">
                <MudButton OnClick="@EnterLogin" Class="ml-auto mr-n3 mb-1" Color="Color.Error">Einloggen</MudButton>
                <MudButton OnClick="@ToggleLogin" Class="ml-auto mr-n3 mb-1" Color="Color.Error">Schließen</MudButton>
            </div>
        </div>
    </MudPopover>

    <MudMainContent style="padding-left: 5%; padding-right: 5%;">
        <CascadingValue Value="ShowAdminContent">
            @if (initialized)
            {
                @Body
            }
            else
            {
                <MudProgressLinear Color="Color.Secondary" Indeterminate="true" />
            }
        </CascadingValue>
    </MudMainContent>
</MudLayout>

@code {
    private bool _open = false;
    private bool ShowAdminContent = false;
    private bool IsAdmin = false;
    private bool Login = false;
    private string Password { get; set; } = "";
    private bool initialized = false;

    private void ToggleDrawer()
    {
        _open = !_open;
    }

    private void ToggleAdmin()
    {
        ShowAdminContent = !ShowAdminContent;
        LocalStorage.SetItem("Romeilter.ShowAdmin", ShowAdminContent);
    }

    private void ToggleLogin()
    {
        Login = !Login;
        Password = "";
    }

    private void EnterLogin()
    {
        if (Password == "pizza")
        {
            IsAdmin = true;
            LocalStorage.SetItem("Romeilter.Admin", true);
        }
        else
        {
            IsAdmin = false;
        }

        ToggleLogin();
    }

    protected override async Task OnInitializedAsync()
    {
        var admin = await LocalStorage.GetItem<bool>("Romeilter.Admin");
        var showAdmin = await LocalStorage.GetItem<bool>("Romeilter.ShowAdmin");
        IsAdmin = admin == true;
        ShowAdminContent = showAdmin;
        await base.OnInitializedAsync();
        initialized = true;
    }
}